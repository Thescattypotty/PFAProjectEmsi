import {
  require_profiling
} from "./chunk-ETIMGE3D.js";
import {
  HTMLElementType,
  exactProp,
  init_utils,
  setRef,
  useEnhancedEffect_default,
  useForkRef
} from "./chunk-3ZMXWMDE.js";
import {
  require_prop_types
} from "./chunk-IXXQVOTC.js";
import {
  require_jsx_runtime
} from "./chunk-RFO3C5PI.js";
import {
  require_react
} from "./chunk-TPBF7RJF.js";
import {
  __toESM
} from "./chunk-J43GMYXM.js";

// ../../node_modules/@mui/base/Portal/Portal.js
var React = __toESM(require_react());
var ReactDOM = __toESM(require_profiling());
var import_prop_types = __toESM(require_prop_types());
init_utils();
var import_jsx_runtime = __toESM(require_jsx_runtime());
"use client";
function getContainer(container) {
  return typeof container === "function" ? container() : container;
}
var Portal = React.forwardRef(function Portal2(props, forwardedRef) {
  const {
    children,
    container,
    disablePortal = false
  } = props;
  const [mountNode, setMountNode] = React.useState(null);
  const handleRef = useForkRef(React.isValidElement(children) ? children.ref : null, forwardedRef);
  useEnhancedEffect_default(() => {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  useEnhancedEffect_default(() => {
    if (mountNode && !disablePortal) {
      setRef(forwardedRef, mountNode);
      return () => {
        setRef(forwardedRef, null);
      };
    }
    return void 0;
  }, [forwardedRef, mountNode, disablePortal]);
  if (disablePortal) {
    if (React.isValidElement(children)) {
      const newProps = {
        ref: handleRef
      };
      return React.cloneElement(children, newProps);
    }
    return (0, import_jsx_runtime.jsx)(React.Fragment, {
      children
    });
  }
  return (0, import_jsx_runtime.jsx)(React.Fragment, {
    children: mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode
  });
});
true ? Portal.propTypes = {
  children: import_prop_types.default.node,
  container: import_prop_types.default.oneOfType([HTMLElementType, import_prop_types.default.func]),
  disablePortal: import_prop_types.default.bool
} : void 0;
if (true) {
  Portal["propTypes"] = exactProp(Portal.propTypes);
}

// ../../node_modules/@mui/base/Portal/index.js
"use client";

export {
  Portal
};
//# sourceMappingURL=chunk-2U4DMZIR.js.map
